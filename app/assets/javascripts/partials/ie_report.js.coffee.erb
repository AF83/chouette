$(".imports.show, .exports.show, .compliance_checks.show").ready ->

  get_export_results = (html_container, html_element) ->
    html_container.children().each ->
      if( $( this ).is(html_element) )
        $( this ).show()
      else
        $( this ).hide()

  if $( "#files_statistics" ).length
    Morris.Donut({
      element: 'files_statistics',
      data: [
        {
          label: $(".files_error").data('label'),
          value: $('.files_error span.file_name').size()
        },
        {
          label: $(".files_ignored").data('label'),
          value: $('.files_ignored span.file_name').size()
        },
        {
          label: $(".files_ok").data('label'),
          value: $('.files_ok span.file_name').size()
        }
      ],
      colors: [ "#e22b1b", "#898e7f", "#8fc861" ]
    }).on('click', update = (i, row) ->
      switch i
        when 0 then get_export_results( $(".report"), $(".files_error"))
        when 1 then get_export_results( $(".report"), $(".files_ignored"))
        when 2 then get_export_results( $(".report"), $(".files_ok")) )

  Morris.Bar({
    element: 'objects_statistics',
    data: [
      { object: $("th.lines").text(), value: $(".lines table").data("total-lines")  },
      { object: $("th.routes").text(), value: $(".lines table").data("total-routes")  },
      { object: $("th.connection_links").text(), value: $(".lines table").data("total-connection_links") },
      { object: $("th.time_tables").text(), value: $(".lines table").data("total-time_tables") },
      { object: $("th.stop_areas").text(), value: $(".lines table").data("total-stop_areas") },
      { object: $("th.access_points").text(), value: $(".lines table").data("total-access_points") },
      { object: $("th.vehicle_journeys").text(), value: $(".lines table").data("total-vehicle_journeys") },
      { object: $("th.journey_patterns").text(), value: $(".lines table").data("total-journey_patterns") },
    ],
    xkey: 'object',
    ykeys: ['value'],
    labels: [$(".lines table").data('label')]
    xLabelAngle: 40,
    xAxisLabelTopPadding: 7,
    padding: 40,
    hideHover: true
  }).on('click', update = (i, row) ->
    get_export_results( $(".report"), $("div.lines")) )

  refreshInterval = $(".report").data("refresh-interval")
  if refreshInterval > 0
    reloadPage = () -> window.location.reload()
    setInterval(reloadPage,refreshInterval * 1000)
